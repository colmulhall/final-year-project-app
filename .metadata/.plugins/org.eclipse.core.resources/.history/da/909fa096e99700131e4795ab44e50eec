/* This is where the news updates are retrieved from the database and 
 * put into a list for the user to view.
 */

package com.phoenixpark.app;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ListActivity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

public class NewsList extends ListActivity 
{
	// URL to get contacts JSON
    private static String url = "http://10.0.2.2/FYP-Web-Coding/android_get_enws_titles.php";
 
    // JSON Node names
    private static final String TAG_NEWS = "news_updates";
    private static final String TAG_ID = "id";
    private static final String TAG_TITLE = "title";
    private static final String TAG_DATE = "date";
 
    // events JSONArray
    JSONArray news = null;
 
    // Hashmap for ListView
    ArrayList<HashMap<String, String>> newsList;
 
    @Override
    public void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.newslist_layout);
 
        newsList = new ArrayList<HashMap<String, String>>();
 
        ListView lv = getListView();
        
        // Listview on item click listener
        lv.setOnItemClickListener(new OnItemClickListener() 
        {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) 
            {
                // get id from selected ListItem
                String news_item_id = ((TextView) view.findViewById(R.id.the_id)).getText().toString();
 
                // Starting single contact activity
                Intent in = new Intent(getApplicationContext(), EventInformation.class);
                in.putExtra(TAG_ID, news_item_id);
                startActivity(in);
            }
        });
 
        // Calling async task to get json
        new GetNews().execute();
    }
 
    //Async task class to get json by making HTTP call
    private class GetNews extends AsyncTask<Void, Void, Void> 
    {
    	private ProgressDialog progress;  //progress dialog when loading events
    	
        @Override
        protected void onPreExecute() 
        {
            super.onPreExecute();
            // Showing progress dialog
            progress = ProgressDialog.show(NewsList.this, "Getting news...", "Please Wait...");
        }
 
        @Override
        protected Void doInBackground(Void... arg0) 
        {
            // Creating service handler class instance
            ServiceHandler sh = new ServiceHandler();
 
            // Making a request to url and getting response
            String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);
 
            Log.d("Response: ", "> " + jsonStr);
 
            if (jsonStr != null) 
            {
                try {
                    JSONObject jsonObj = new JSONObject(jsonStr);
                     
                    // Getting JSON Array node
                    news = jsonObj.getJSONArray(TAG_NEWS);
 
                    // looping through All Contacts
                    for (int i = 0; i < news.length(); i++) 
                    {
                        JSONObject c = news.getJSONObject(i);
                         
                        String the_title = c.getString(TAG_TITLE);
                        String the_id = c.getString(TAG_ID);
                        String the_date = c.getString(TAG_DATE);
 
                        // tmp hashmap for single event
                        HashMap<String, String> news_item = new HashMap<String, String>();
 
                        // adding each child node to HashMap key => value
                        news_item.put(TAG_TITLE, the_title);
                        news_item.put(TAG_ID, the_id);
                        news_item.put(TAG_DATE, the_date);
 
                        // adding contact to event list
                        newsList.add(news_item);
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            } else {
                Log.e("ServiceHandler", "Couldn't get any data from the url");
            }
 
            return null;
        }
 
        @Override
        protected void onPostExecute(Void result) 
        {
            super.onPostExecute(result);
            
            // Dismiss the progress dialog
            progress.dismiss();

            ListAdapter adapter = new SimpleAdapter( NewsList.this, newsList,
                    R.layout.list_item, new String[] { TAG_TITLE, TAG_ID, TAG_DATE}, new int[] { R.id.the_title,
                            R.id.the_id, R.id.the_date});
 
            setListAdapter(adapter);
        }
    }
}