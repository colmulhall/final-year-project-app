package com.phoenixpark.app;

import java.util.ArrayList;
import android.content.Context;
import android.content.Intent;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.Menu;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

public class MapPark extends FragmentActivity implements LocationListener 
{ 
    GoogleMap map;
    ArrayList<LatLng> markerPoints;
    Location location; // location
    LatLng currentLocation;
    Location loc;
    protected LocationManager locationManager;
    protected LocationListener locationListener;
    protected String latitude,longitude;
    private Intent intent;
    private LocalDbManager db;
    public String the_location;
    
    @Override
    protected void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.mappark_layout);
        
        //Open locations database to write
	    db = new LocalDbManager(this);
	    db.openLocsToRead();
 
        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, this);
        
        // Initializing
        markerPoints = new ArrayList<LatLng>();
 
        // Getting reference to SupportMapFragment of the activity_main
        SupportMapFragment fm = (SupportMapFragment)getSupportFragmentManager().findFragmentById(R.id.map);
 
        // Getting Map for the SupportMapFragment
        map = fm.getMap();
        
        Criteria criteria = new Criteria();

        // Getting the name of the best provider
        String provider = locationManager.getBestProvider(criteria, true);

        // Getting Current Location
        location = locationManager.getLastKnownLocation(provider);
        
        double current_lat = location.getLatitude();
		double current_lng = location.getLongitude();
		currentLocation = new LatLng(current_lat, current_lng);
		
		// Zoom into the current location in Google Map
	    map.moveCamera(CameraUpdateFactory.newLatLng(currentLocation));
	    map.animateCamera(CameraUpdateFactory.zoomTo(15));
        
        //get location of this event/news item
		intent = getIntent();
        the_location = intent.getExtras().getString("loc");
        
        //get lat/long from local database
        String lt = db.getLocLatitude(the_location);
        String lg = db.getLocLongitude(the_location);
        
        //parse these from string to double so they can be plotted on a map
        double lat = Double.parseDouble(lt);
        double lng = Double.parseDouble(lg);
        
        if(map != null)
        {
            // Enable MyLocation Button in the Map
            map.setMyLocationEnabled(true);
            
            LatLng origin = new LatLng(location.getLatitude(), location.getLongitude());
        	LatLng dest = new LatLng(lat, lng);
        	
        	//add marker to the destination
        	MarkerOptions marker = new MarkerOptions().position(new LatLng(lat, lng)).title(the_location);
        	marker.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN));
        	map.addMarker(marker);
        }
    }
 
    @Override
    public boolean onCreateOptionsMenu(Menu menu) 
    {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.mainscreen_menu, menu);
        return true;
    }

    // unimplemented methods
	@Override
	public void onLocationChanged(Location location) 
	{
		double lat = location.getLatitude();
		double lng = location.getLongitude();

		LatLng currentLocation = new LatLng(lat, lng);

		// Showing the current location in Google Map
	    //map.moveCamera(CameraUpdateFactory.newLatLng(currentLocation));

	    // Zoom in the Google Map
	    //map.animateCamera(CameraUpdateFactory.zoomTo(15));
	}

	@Override
	public void onProviderDisabled(String provider) 
	{
		// TODO Auto-generated method stub	
	}

	@Override
	public void onProviderEnabled(String provider)
	{
		// TODO Auto-generated method stub
	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) 
	{
		// TODO Auto-generated method stub	
	}
	
	// back button pressed by user
    @Override
    public void onBackPressed() 
    {
        finish();//go back to the previous Activity
        overridePendingTransition(R.anim.slideup_in, R.anim.slideup_out);   
    }
}